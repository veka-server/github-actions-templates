name: Build, Scan & Push Docker Image Reusable

on:
  workflow_call:
    secrets:
      GHCR_PAT:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout du repo (sans fetch-depth pour acc√©der √† tous les tags)
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # important pour r√©cup√©rer tous les tags

      # 2Ô∏è‚É£ Log in au registre GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # 3Ô∏è‚É£ D√©finir et checkout le bon tag si schedule
      - name: Set image tags and checkout tag
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "üìÖ Build programm√© d√©tect√©"
            TAG=$(git tag | sort -V | tail -n1)
            echo "Dernier tag trouv√©: $TAG"
            git checkout "tags/$TAG"
          else
            echo "üöÄ Build depuis un √©v√©nement Release"
            TAG=${GITHUB_REF##*/}
          fi

          REPO_NAME=${GITHUB_REPOSITORY##*/}
          IMAGE="ghcr.io/${{ github.repository_owner }}/$REPO_NAME:$TAG"

          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      # 4Ô∏è‚É£ Build de l'image Docker (no cache)
      - name: Build Docker image
        run: docker build --no-cache -t $IMAGE .

      # 5Ô∏è‚É£ Scan de l'image avec Trivy
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.IMAGE }}
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL
          vuln-type: os,library
          ignore-unfixed: false
          timeout: 5m

      # 6Ô∏è‚É£ Push de l'image
      - name: Push Docker image
        run: docker push $IMAGE

      # 7Ô∏è‚É£ Push du tag 'latest' seulement si ce n‚Äôest pas un run manuel
      - name: Push 'latest' tag (skip if manual)
        if: github.event_name == 'schedule' || github.event_name == 'release'
        run: |
          docker tag $IMAGE ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest
          docker push ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest
